# ----------------------------------------------------------------------
# | Development                                                        |
# ----------------------------------------------------------------------

######################
# Logs and databases #
######################
*.log
*.sql
*.sqlite
*.sqlite3
*.sqlite3-journal
# pip Installer Logs
pip-log.txt
pip-delete-this-directory.txt

##############
#  Python    #
##############

## Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

## C extensions
*.so

## Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

## Virtualenv
.Python
[Bb]in
[Ii]nclude
[Ll]ib
[Ll]ib64
[Ll]ocal
[Ss]cripts
pyvenv.cfg
.venv
pip-selfcheck.json

## JupyterNotebooks
# Remove previous ipynb_checkpoints
#   git rm -r .ipynb_checkpoints/
.ipynb_checkpoints
*/.ipynb_checkpoints/*

## IPython
profile_default/
ipython_config.py

## Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

## Translations
*.mo
*.pot

## Django stuff
local_settings.py

## Flask stuff
instance/
.webassets-cache

## Scrapy stuff:
.scrapy

## Sphinx documentation
docs/_build/

## PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec
## PyBuilder
.pybuilder/
target/

## pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

## pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

## PEP 582 (e.g., github.com/David-OConnor/pyflow)
__pypackages__/

## Celery stuff
celerybeat-schedule
celerybeat.pid

## SageMath parsed files
*.sage.py

## Spyder project settings
.spyderproject
.spyproject

## Rope project settings
.ropeproject

## mkdocs documentation
/site

## mypy
.mypy_cache/
.dmypy.json
dmypy.json

## Pyre type checker
.pyre/

## pytype static type analyzer
.pytype/

## Cython debug symbols
cython_debug/

# ----------------------------------------------------------------------
# | OS Generated Files                                                 |
# ----------------------------------------------------------------------

#########
# Linux #
#########

*~
# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*
# KDE directory preferences
.directory
.kde
# Linux trash folder which might appear on any partition or disk
.Trash-*
# .nfs files are created when an open file is removed but is still being accessed
.nfs*
# LibreOffice locks
.~lock.*#

#########
# macOS #
#########

._*
.AppleDouble
.DS_Store
.DS_Store?
.LSOverride
.Spotlight-V100
.Trashes

#########
# Win10 #
#########

# Thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
# Dump file
*.stackdump
# Folder config file
[Dd]esktop.ini
# Recycle Bin used on file shares
$RECYCLE.BIN/
# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp
# Windows shortcuts
*.lnk

# ----------------------------------------------------------------------
# | EDITORS                                                            |
# ----------------------------------------------------------------------

##############
#  VSCode    #
##############
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/
